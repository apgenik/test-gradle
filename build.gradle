plugins {
    id 'java'
    id 'application'
}

application {
    mainClass = 'org.example.Main' // Указываем главный класс для плагина application
}

jar {
    manifest {
        attributes 'Main-Class': 'org.example.Main'
    }
}
group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    downloadJars
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    //downloadJars 'group:artifact:version'
    downloadJars 'org.liquibase:liquibase-core:4.31.0'
}

tasks.register('downloadAndCopyJars', Copy) {
    from configurations.downloadJars
    into file("./out")
}

tasks.register('copyFiles', Copy) {
    dependsOn downloadAndCopyJars
    from './src/main/resources'
    into './out'

    rename { fileName ->
        if (fileName == 'changelog.yaml') {
            return 'changelog_0001.yaml'
        }
        return fileName
    }
}

tasks.register('zipOutFolder', Zip) {
    dependsOn copyFiles
    from "$projectDir/out"
    archiveFileName = "out.zip"
    destinationDirectory = file("$projectDir")
}

tasks.register('cleanOut', Delete) {
    delete "$projectDir/out", "$projectDir/out.zip"
}

test {
    useJUnitPlatform()
}